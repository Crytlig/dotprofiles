Set-location D:
Import-Module PSReadLine -RequiredVersion 2.2.0
Import-Module posh-git
Import-Module oh-my-posh


oh-my-posh --init --shell pwsh --config ~/jandedobbeleer.omp.json | Invoke-Expression


set-PoshPrompt craver

# fish-like autocomplete
Set-PSReadLineOption -HistorySearchCursorMovesToEnd
#Set-PSReadLineOption -PredictionSource HistoryAndPlugin
Set-PSReadLineOption -EditMode Windows
Set-PSReadLineOption -PredictionSource History

Set-PSReadlineKeyHandler -Key "Ctrl+g" -Function AcceptSuggestion
Set-PSReadLineKeyHandler -Key UpArrow -Function HistorySearchBackward
Set-PSReadLineKeyHandler -Key "Ctrl+f" -Function ForwardWord


# Set Alias for Terraform and Docker Compose
Set-Alias -Name tf -Value terraform -Option AllScope
Set-Alias -Name dockerc -Value Docker-Compose -Option AllScope


Set-PSReadLineOption -PredictionSource History
Set-PSReadLineOption -HistorySearchCursorMovesToEnd
Set-PSReadLineOption -PredictionViewStyle ListView

Set-PSReadLineOption -BellStyle None

Set-PSReadLineKeyHandler -Chord "ctrl+g" -Function AcceptSuggestion
Set-PSReadLineKeyHandler -Chord "ctrl+b" -Function SwitchPredictionView
Set-PSReadLineKeyHandler -Key Tab -Function Complete
Set-PSReadLineKeyHandler -Key Ctrl+q -Function TabCompleteNext
Set-PSReadLineKeyHandler -Key Ctrl+Q -Function TabCompletePrevious

<# 
.Synopsis

    Function GG:

    Open Chrome and search for [-SearchString] Arg.
    If [-SearchString] isn't provided, default to Clipboard.
    Requires Google Chrome browser to be installed with "chrome.exe" in the system path.

    Function GGO:

    Open Chrome and search URL or go to website.
    Use [-SearchUrl] arg.
    If [-SearchUrl] arg is not given, default to Clipboard
    Requires Google Chrome browser to be installed with "chrome.exe in the system path"
    
.Example

GG 
gg "New York"

GGO
ggo dev.azure.com

#>

Function gg {
param (
  [parameter(mandatory=$false, Position=0)] `
  [String]$SearchString
  )

  process {
    if (!$SearchString){
        $SearchString = Get-Clipboard;
      }

      $URL = $SearchString -replace ' ','+';
      $URL = "https://www.google.com/search?q=" + $URL;
      echo ("Searching Google for <`"$SearchString`">...");
      start chrome.exe $URL;
  }
}

Function ggo {
  param (
    [Parameter(Mandatory=$false, Position=0)]
    [string]$SearchUrl
  )

  process {
    if (!$SearchUrl) {
      $SearchUrl = Get-Clipboard
    }
    echo ("Redirecting to <`"$SearchUrl`">")
    start chrome.exe $SearchUrl
  }
}
